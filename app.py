import streamlit as st
import plotly.express as px
from TM1py.Services import TM1Service
from TM1py.Utils.Utils import build_pandas_dataframe_from_cellset
from pycaret.regression import setup, compare_models, evaluate_model, predict_model, save_model, load_model, pull
import pandas as pd
import pandas_profiling
from streamlit_pandas_profiling import st_profile_report


tm1_credentials = {
    "address":"YOUR SERVER USL", 
    "port": 9999,  # Replace with your port number
    "user": "YOUR USER", 
    "password": "YOUR PASSWORD", 
    "ssl": False
}

with st.sidebar:
    st.markdown(
        """
    <style>
        [data-testid=stSidebar] [data-testid=stImage]{
            text-align: center;
            display: block;
            margin-left: auto;
            margin-right: auto;
            width: 100%;
        }
    </style>
    """, unsafe_allow_html=True
    )
    st.image("https://www.onepointltd.com/wp-content/uploads/2020/03/inno2.png",  width=200)
    st.markdown("<h1 style='text-align: center; color: black;'>TM1 Is Amazing</h1>",
                unsafe_allow_html=True)

    project = st.selectbox("Select an Environment", ['PAPredict','CarSales','Coffee'])
    collection = st.selectbox("Cube Focus", ['General Ledger','Ops Sales','EXP Expense Planning'])

    choice = st.radio("Navigation", ['Get Data', 'Profile', 'Machine Learning', 'Data Upload'])
    st.info("IBM® Planning Analytics with Watson is an AI-infused, continuous integrated planning solution that allows you to transcend the limits of manual planning. This solution breaks down business unit siloes so you can quickly create more accurate plans and forecasts for FP&A, sales, supply chain and beyond—all on one platform.")

    # Import data from PA 
    with TM1Service(address=tm1_credentials['address'], port=tm1_credentials['port'], user=tm1_credentials['user'], password=tm1_credentials['password'],ssl=tm1_credentials['ssl'] ) as tm1: 
        data = tm1.cubes.cells.execute_view(cube_name='OPS Sales', view_name='Conference View', private = False)
        df = build_pandas_dataframe_from_cellset(data, multiindex=False)

if choice == 'Get Data':
    st.title('TM1 Dataframes')
    st.write("Viewing a dataframe from TM1")
    st.dataframe(df)

    with st.expander('Summary Statistics'):
        st.dataframe(df.describe().T)

    with st.expander('Sales Review'):
        st.plotly_chart(px.bar(df, x = 'Time Date', y='Values', color='Product'), title="Sales By Product")
        st.plotly_chart(px.bar(df, x = 'Time Date', y='Values', color='Store'), title="Sales By Store")

if choice == 'Machine Learning':
    st.title('Applied Machine Learning')
    abt = df.drop(['Sandboxes', 'Account', 'Version', 'OPS Sales Source', 'OPS Sales Measure'], axis=1).reset_index().drop('index',axis=1)
    abt['Time Date'] = pd.to_datetime(abt['Time Date'], format="%d%m%Y") 
    s = setup(abt, target='Values', silent=True)
    setup_df = pull()
    st.write("This table shows the machine learning configuration generated by PyCaret")
    st.dataframe(setup_df)
    best_model = compare_models()
    st.write("And this shows a comparison of the trained machine learning models")
    df2 = pull()
    st.dataframe(df2)
    st.write(best_model)


if choice == 'Profile':
    st.title('Data Profiling Report')
    pr = df.profile_report()
    st_profile_report(pr)


if choice == 'Data Upload':
    st.title('File Uploader')
    st.file_uploader("Upload a new dataset to Planning Analytics")